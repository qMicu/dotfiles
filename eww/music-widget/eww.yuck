;; --- Listeners & Polls ---
;; Use `deflisten` with `playerctl --follow` to react to player events
;; efficiently. When a player quits, `playerctl` exits, and the `|| echo`
;; part provides a default value, ensuring the UI updates correctly.
(deflisten song_title    :initial "No Music Playing"
"playerctl metadata --format '{{title}}' --follow || echo 'No Music Playing'")

(deflisten song_artist   :initial "Unknown Artist"
"playerctl metadata --format '{{artist}}' --follow || echo 'Unknown Artist'")

(deflisten player_status :initial "Stopped"
"playerctl metadata --format '{{status}}' --follow || echo 'Stopped'")

;; Polling is still needed for things that change continuously, like position,
;; but we can use longer, more efficient intervals.
(defpoll song_length_s   :interval "2s"
"playerctl metadata mpris:length | awk '{print $1 / 1000000}' || echo 1")

(defpoll song_position_s    :interval "1s" "playerctl position || echo 0")

(defpoll formatted_position :interval "1s" "playerctl position -f '{{duration(position)}}' || echo '0:00'")

;; Cover art and volume can also be polled at a slower rate.
(defpoll cover_art_path :interval "1s" "$HOME/.config/eww/music-widget/get-cover.sh")
(defpoll volume_percent :interval "2s" "$HOME/.config/eww/music-widget/volumecontroller.sh get")
(defpoll volume_mute    :interval "2s" "pamixer --get-mute")

;; Cava runs as a persistent listener, which is correct.
(deflisten cava :initial "" "bash $HOME/.config/eww/music-widget/cava.sh")


;; --- Widget Definition ---

(defwidget music-widget []
  (box :class "music-widget" :orientation "h" :space-evenly false
    (box :class "cover-art" :style "background-image: url('${cover_art_path}');")
    (box :class "music-info" :orientation "v" :space-evenly false
      (label :class "song-title" :text song_title :limit-width 25)
      (label :class "artist" :text song_artist :limit-width 25)
      
      (box :class "controls" :orientation "h"
        (button :onclick "playerctl previous" "󰒮")
        (button :onclick "playerctl play-pause" {player_status == "Playing" ? "󰏤" : "󰐊"})
        (button :onclick "playerctl next" "󰒭")
      )
      
      (label :class "position" :text formatted_position)

      (
        scale :class "progress-bar" 
              :min 0 
              :max song_length_s 
              :value song_position_s 
              :onchange "playerctl position {}"
      )

      (label :class "cava-visualizer" :text cava)

    )
    
    (
      box :class "volume_bar" 
          :orientation "v" 
          :spacing 20 
          :space-evenly false 
          :vexpand false 
          :hexpand false
      (
        button :onclick "$HOME/.config/eww/music-widget/volumecontroller.sh mute"
        :class "vol_icon"
        :style "color: ${volume_mute == 'true' ? '#c1ae8b' : '#b66f54'};"
                        {volume_mute == "true" ? "󰝟"         :         ""})
      (
        scale :flipped true 
              :orientation "v" 
              :max 100 
              :min 0 
              :value {volume_percent}
      :onchange "$HOME/.config/eww/music-widget/volumecontroller.sh set {}"
      )
    )
  )
)


;; --- Window Definition ---

(defwindow music-widget
  :monitor 0
  :geometry (
    geometry :x "1200px" 
             :y "10px" 
             :width "440px" 
             :height "120px"
  )
  :wm-ignore true
  (music-widget)
)
